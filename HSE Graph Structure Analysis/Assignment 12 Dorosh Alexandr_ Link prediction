{"cells":[{"cell_type":"markdown","id":"0829b27d","metadata":{"id":"0829b27d"},"source":["# Assignment — Link prediction"]},{"cell_type":"code","execution_count":null,"id":"db7183ea","metadata":{"id":"db7183ea"},"outputs":[],"source":["from tqdm.notebook import tqdm\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import roc_curve, auc\n","import pandas as pd\n","from sklearn.decomposition import TruncatedSVD\n","import matplotlib.pyplot as plt\n","import networkx as nx\n","import requests\n","import numpy as np\n","from collections import defaultdict"]},{"cell_type":"markdown","id":"89e0bcaa","metadata":{"id":"89e0bcaa"},"source":["### Task 1. Dataset for link prediction (0 points)"]},{"cell_type":"markdown","id":"d835335e","metadata":{"id":"d835335e"},"source":["Consider link prediction on the [e-mails network](http://snap.stanford.edu/data/email-Eu-core-temporal.html) where nodes are members of a research institution and edges are e-mails given with timestamps. The goal is to predict occurrence of edges in the test time period using information from the train time period only."]},{"cell_type":"code","execution_count":null,"id":"d15fc220","metadata":{"id":"d15fc220"},"outputs":[],"source":["url = 'https://raw.githubusercontent.com/netspractice/network-science/main/datasets/email-Eu-core-temporal.txt'\n","open('email-Eu-core-temporal.txt', 'wb').write(requests.get(url).content);"]},{"cell_type":"code","execution_count":null,"id":"abfb0522","metadata":{"id":"abfb0522","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1747064592220,"user_tz":-180,"elapsed":656,"user":{"displayName":"Александр Дорош","userId":"00867939589235916416"}},"outputId":"9826077a-f890-45ab-9725-fb6e52c45cdb"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["        sender  receiver  timestamp\n","0          582       364          0\n","1          168       472       2797\n","2          168       912       3304\n","3            2       790       4523\n","4            2       322       7926\n","...        ...       ...        ...\n","332329     324       367   45401817\n","332330     790       126   45402441\n","332331     790       126   45403709\n","332332     782       126   45404903\n","332333     685       643   45405138\n","\n","[332334 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-e2b435df-4983-48c2-a2b8-935fb83460db\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sender</th>\n","      <th>receiver</th>\n","      <th>timestamp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>582</td>\n","      <td>364</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>168</td>\n","      <td>472</td>\n","      <td>2797</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>168</td>\n","      <td>912</td>\n","      <td>3304</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>790</td>\n","      <td>4523</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","      <td>322</td>\n","      <td>7926</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>332329</th>\n","      <td>324</td>\n","      <td>367</td>\n","      <td>45401817</td>\n","    </tr>\n","    <tr>\n","      <th>332330</th>\n","      <td>790</td>\n","      <td>126</td>\n","      <td>45402441</td>\n","    </tr>\n","    <tr>\n","      <th>332331</th>\n","      <td>790</td>\n","      <td>126</td>\n","      <td>45403709</td>\n","    </tr>\n","    <tr>\n","      <th>332332</th>\n","      <td>782</td>\n","      <td>126</td>\n","      <td>45404903</td>\n","    </tr>\n","    <tr>\n","      <th>332333</th>\n","      <td>685</td>\n","      <td>643</td>\n","      <td>45405138</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>332334 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e2b435df-4983-48c2-a2b8-935fb83460db')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e2b435df-4983-48c2-a2b8-935fb83460db button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e2b435df-4983-48c2-a2b8-935fb83460db');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-8cce8a4f-cba8-4cf3-80f1-c2466327a3ae\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8cce8a4f-cba8-4cf3-80f1-c2466327a3ae')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-8cce8a4f-cba8-4cf3-80f1-c2466327a3ae button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_84e2e68b-56a2-4150-b852-0caa7f1fad8a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('email_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_84e2e68b-56a2-4150-b852-0caa7f1fad8a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('email_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"email_df"}},"metadata":{},"execution_count":3}],"source":["email_df = pd.read_csv(\n","    'email-Eu-core-temporal.txt',\n","    delimiter=' ',\n","    names=['sender', 'receiver', 'timestamp']\n",")\n","email_df"]},{"cell_type":"markdown","id":"0feb5713","metadata":{"id":"0feb5713"},"source":["Next, consider the following preprocessing procedure:\n","1. Select edges by given train and test time periods, for example, [0, 1000) is train and [1000, 2000) is test\n","2. Build a _core_ — a connected network where every edge occurs at least $k_\\text{train}$ times in the train time period or at least $k_\\text{test}$ times in the test time period. Let the core be undirected, so occurrences edges (1, 0) and (0, 1) are computed together.\n","3. From the core, select a train set of edges $E_\\text{train}$ that occur for the first time in the train period. All others are included to $E_\\text{test}$.\n","3. Exclude test edges that contain nodes that do not occur in train edges.\n","\n","Write a function `train_test_edges` that takes a pd.DataFrame `email_df` with e-mail network, a tuple with the train time period borders `train_period`, say, (0, 1000), a similar tuple `test_period`, the number of edges occurrences `ktrain` and `ktest`. The function returns two lists with tuples — train and test edges. Every edge is returned of the form where the first node is less than the second, for example [(1, 2), (2, 3)] is ok, but [(2, 1), (3, 2)] is wrong."]},{"cell_type":"code","execution_count":null,"id":"2edf3ba8","metadata":{"deletable":false,"id":"2edf3ba8","nbgrader":{"cell_type":"code","checksum":"d02465886cf63caec30af195db4cf5b9","grade":false,"grade_id":"cell-676bd18fcab3c342","locked":false,"schema_version":3,"solution":true,"task":false}},"outputs":[],"source":["def train_test_edges(email_df, train_period, test_period, ktrain, ktest):\n","\n","    email_temp = email_df.copy()\n","    email_temp = email_temp[\n","        (train_period[0] <= email_temp.timestamp)\n","        & (email_temp.timestamp < test_period[1])\n","    ]\n","    email_temp['from'] = email_temp[['sender', 'receiver']].min(axis=1)\n","    email_temp['to'] = email_temp[['sender', 'receiver']].max(axis=1)\n","    email_temp = email_temp.drop(['sender', 'receiver'], axis=1)\n","    email_temp = email_temp.set_index(['from', 'to'])\n","\n","    email_train = email_temp[email_temp.timestamp < train_period[1]]\n","    email_train = email_train.groupby(['from', 'to']).count()\n","    train_core = email_train[email_train.timestamp >= ktrain].index.tolist()\n","\n","    email_test = email_temp[test_period[0] <= email_temp.timestamp]\n","    email_test = email_test.groupby(['from', 'to']).count()\n","    test_core = email_test[email_test.timestamp >= ktest].index.tolist()\n","\n","    core = list(set(train_core + test_core))\n","\n","    email_first = email_temp.loc[core].groupby(['from', 'to']).min()\n","    train_part = email_first[email_first.timestamp < train_period[1]].index.tolist()\n","    test_part  = email_first[email_first.timestamp >= test_period[0]].index.tolist()\n","\n","    train_nodes = set()\n","    for u, v in train_part:\n","      train_nodes.add(u)\n","      train_nodes.add(v)\n","\n","    test_part_new = []\n","    for u, v in test_part:\n","      if u in train_nodes and v in train_nodes:\n","        test_part_new.append((u, v))\n","\n","    return train_part, test_part_new"]},{"cell_type":"code","execution_count":null,"id":"9a025753","metadata":{"deletable":false,"editable":false,"id":"9a025753","nbgrader":{"cell_type":"code","checksum":"986741c4dd56205f3c9f200d31ede426","grade":true,"grade_id":"cell-a77f2fa764e87595","locked":true,"points":0,"schema_version":3,"solution":false,"task":false}},"outputs":[],"source":["train_pos, test_pos = train_test_edges(email_df, (1e7, 2e7), (2e7, 2.5e7), 4, 2)\n","_train_pos, _test_pos = np.array(train_pos), np.array(test_pos)\n","assert np.all(_train_pos[:, 0] < _train_pos[:, 1])\n","assert np.all(_test_pos[:, 0] < _test_pos[:, 1])\n","assert len(set(train_pos).intersection(test_pos)) == 0\n","assert _train_pos.shape == (3880, 2)\n","assert _test_pos.shape == (720, 2)"]},{"cell_type":"markdown","id":"db118c19","metadata":{"id":"db118c19"},"source":["### Task 2. Negative sampling (0 points)"]},{"cell_type":"markdown","id":"164761a3","metadata":{"id":"164761a3"},"source":["Usually, graphs are sparse, so there is the high imbalance between existent (positive) edges and nonexistent (negative) edges. Since the link prediction can be considered as a classification problem, the imbalance leads to the high misclassification. To eliminate this problem, we can use the negative sampling techniques, that is using only a some random part of negative edges in training.\n","\n","<img src='https://raw.githubusercontent.com/netspractice/network-science/main/images/pos_neg_edges.png' width=500>\n","\n","The simplest sampling strategy is to copy positive edges and randomly replace one node checking they do not occur in positive set and they are not self-loops. Let the negative set be the same size as the positive.\n","\n","The `negative_sampling` function samples the unexisted edges from the graph. It takes list of train and test positive edges and returns train and test negative edges."]},{"cell_type":"code","execution_count":null,"id":"c6ac2008","metadata":{"deletable":false,"id":"c6ac2008","nbgrader":{"cell_type":"code","checksum":"909994f38bc19f1e40c34bd32036ba50","grade":false,"grade_id":"cell-2086061e022dc394","locked":false,"schema_version":3,"solution":true,"task":false}},"outputs":[],"source":["def negative_sampling(train_pos, test_pos):\n","    existing_set = set(train_pos).union(set(test_pos))\n","    set_of_nodes = set()\n","    for u, v in train_pos:\n","      set_of_nodes.add(u)\n","      set_of_nodes.add(v)\n","    set_of_nodes = list(set_of_nodes)\n","\n","    train_neg = list()\n","    for u, v in train_pos:\n","      s = v\n","      while s == v or s == u or (u, s) in existing_set or (s, u) in existing_set or (u, s) in train_neg or (s, u)in train_neg:\n","        s = np.random.choice(set_of_nodes)\n","      train_neg.append((u, s))\n","\n","\n","    test_neg = list()\n","    for u, v in test_pos:\n","      s = v\n","      while (s == v or s == u or\n","            (u, s) in existing_set or (s, u) in existing_set or\n","            (u, s) in train_neg or (s, u)in train_neg or\n","            (u, s) in test_neg or (s, u)in test_neg):\n","        s = np.random.choice(set_of_nodes)\n","      test_neg.append((u, s))\n","\n","    return list(train_neg), list(test_neg)"]},{"cell_type":"code","execution_count":null,"id":"a26c1852","metadata":{"deletable":false,"editable":false,"id":"a26c1852","nbgrader":{"cell_type":"code","checksum":"51cc869994fb89807dc2842e2970853c","grade":true,"grade_id":"cell-e71e5d52cb2cae88","locked":true,"points":0,"schema_version":3,"solution":false,"task":false}},"outputs":[],"source":["train_neg, test_neg = negative_sampling(train_pos, test_pos)\n","neg_edges = train_neg + test_neg\n","pos_edges = train_pos + test_pos\n","assert len(train_neg) == len(train_pos)\n","assert len(test_neg) == len(test_neg)\n","# negative edges has nodes from only positive edges\n","assert len(set(np.unique(neg_edges)).difference(np.unique(pos_edges))) == 0\n","# source nodes are the same\n","assert np.all(np.array(pos_edges)[:, 0] == np.array(neg_edges)[:, 0])\n","# no edges in both\n","assert len(set(pos_edges) & set(neg_edges)) == 0\n","# reversed negative edges are not positive\n","reversed_neg_edges = [(v, u) for u, v in neg_edges]\n","assert len(set(pos_edges) & set(reversed_neg_edges)) == 0"]},{"cell_type":"markdown","id":"baac0778","metadata":{"id":"baac0778"},"source":["Form train and test pairs of nodes that contain positive and negative edges:\n","* $X_\\text{train}, X_\\text{test}$ — pairs of nodes, contains positive and negative edges\n","* $y_\\text{train}, y_\\text{test}$ — labels of pairs, 1 is positive, 0 is negative"]},{"cell_type":"code","execution_count":null,"id":"8f536045","metadata":{"id":"8f536045","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747064604937,"user_tz":-180,"elapsed":4824,"user":{"displayName":"Александр Дорош","userId":"00867939589235916416"}},"outputId":"c480558f-50a9-40c0-bf08-0e4d6d6b9db4"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[0, 1, 0, 0, 0, 0, 0, 0, 0, 0]"]},"metadata":{},"execution_count":8}],"source":["x_train = np.random.permutation(train_pos + train_neg)\n","y_train = [int((u, v) in train_pos) for (u, v) in x_train]\n","\n","x_test = np.random.permutation(test_pos + test_neg)\n","y_test = [int((u, v) in test_pos) for (u, v) in x_test]\n","y_test[:10]"]},{"cell_type":"markdown","id":"761c1dd6","metadata":{"id":"761c1dd6"},"source":["### Task 3. Prediction by similarity score (0 points)"]},{"cell_type":"markdown","id":"ac2ce3a2","metadata":{"id":"ac2ce3a2"},"source":["Similarity based algorithm predicts the existence of a link using the similarity score of a pair of nodes: $P(A_{i, j}) \\propto \\text{sim}(i, j)$. The algorithm builds a graph using only train positive edges, compute similarity score for all test pairs and then predicts the link existence by the threshold on ordered by similarity score pairs.\n","\n","Write a function `sim_link_prediction` that takes edges and labels. The function predicts links and returns a tuple with metrics:\n","* FPR (false positive rate) and TPR (true positive rate) in descending of thresholds obtained by Jaccard coefficient, `nx.jaccard_coefficient`: $$\\text{sim}(i, j) = \\frac{|N(i) \\cap N(j)|}{|N(i) \\cup N(j)|}$$\n","* FPR, TPR by Adamic-Adar index, `nx.adamic_adar_index`: $$\\text{sim}(i, j) = \\sum_{x \\in N(i) \\cap N(j)} \\frac{1}{\\log|N(x)|}$$\n","* FPR, TPR by resource allocation index, `nx.resource_allocation_index`: $$\\text{sim}(i, j) = \\sum_{x \\in N(i) \\cap N(j)} \\frac{1}{|N(x)|}$$\n","\n","_Hint: use `sklearn.metrics.roc_curve`._"]},{"cell_type":"code","execution_count":null,"id":"d56abfae","metadata":{"deletable":false,"id":"d56abfae","nbgrader":{"cell_type":"code","checksum":"32af6091446052edf14c97545c0e6da2","grade":false,"grade_id":"cell-4125af6f7f2c4f56","locked":false,"schema_version":3,"solution":true,"task":false}},"outputs":[],"source":["def sim_link_prediction(train_pos, x_test, y_test):\n","    G = nx.Graph()\n","    G.add_edges_from(train_pos)\n","    similarities = [\n","        nx.jaccard_coefficient,\n","        nx.adamic_adar_index,\n","        nx.resource_allocation_index\n","    ]\n","    res = []\n","\n","    for sim in similarities:\n","      y_pred = [p for u, v, p in sim(G, x_test)]\n","      fpr, tpr, _ = roc_curve(y_test, y_pred)\n","      res.append((fpr, tpr))\n","\n","    return res"]},{"cell_type":"code","execution_count":null,"id":"fcf02088","metadata":{"deletable":false,"editable":false,"id":"fcf02088","nbgrader":{"cell_type":"code","checksum":"4a3967a4ee95707916508fbf44c47d3f","grade":true,"grade_id":"cell-ea34274053a92113","locked":true,"points":0,"schema_version":3,"solution":false,"task":false}},"outputs":[],"source":["jac, adam, res = sim_link_prediction(\n","    train_pos,\n","    [[53, 500], [500, 843], [509, 969], [40, 91], [147, 28], [91, 535], [890, 15]],\n","    [1, 0, 1, 0, 0, 1, 0],\n",")\n","assert jac[0].shape == jac[1].shape\n","assert adam[0].shape == adam[1].shape\n","assert res[0].shape == res[1].shape\n","assert round(auc(jac[0], jac[1]), 4) == 0.5\n","assert round(auc(adam[0], adam[1]), 4) == 0.4167\n","assert round(auc(res[0], res[1]), 4) == 0.4167"]},{"cell_type":"markdown","id":"79c11989","metadata":{"id":"79c11989"},"source":["Let us look at the ROC AUC curve to compare results."]},{"cell_type":"code","execution_count":null,"id":"a76d6428","metadata":{"id":"a76d6428","colab":{"base_uri":"https://localhost:8080/","height":564},"executionInfo":{"status":"ok","timestamp":1747064606152,"user_tz":-180,"elapsed":852,"user":{"displayName":"Александр Дорош","userId":"00867939589235916416"}},"outputId":"9ac033a2-5f66-483f-c21b-e5020c471714"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["jac, adam, res = sim_link_prediction(train_pos, x_test, y_test)\n","plt.figure(figsize=(10, 6))\n","cases = [[jac[0], jac[1], 'Jaccard'],\n","         [adam[0], adam[1], 'Adamic-Adar'],\n","         [res[0], res[1], 'Resource alloc.']]\n","for fpr, tpr, label in cases:\n","    plt.plot(fpr, tpr, lw=2,\n","             label='{}, AUC={:.4f}'.format(label, auc(fpr, tpr)))\n","plt.plot([0, 1], [0, 1], lw=2, linestyle='--')\n","plt.xlabel('FPR')\n","plt.ylabel('TPR')\n","plt.title('ROC AUC')\n","plt.legend()\n","plt.show()"]},{"cell_type":"markdown","id":"d9ee366c","metadata":{"id":"d9ee366c"},"source":["### Task 4. Dot product predictor on node embeddings (3 points)"]},{"cell_type":"markdown","id":"75f0c96f","metadata":{"id":"75f0c96f"},"source":["Similarly to the node classification task, node embeddings could be helpful in the link prediction problem. We can predict a link if two nodes are similar in latent space. One of simple methods to obtain similarity score is using dot product of node embeddings: $$P(A_{i, j}) \\propto \\langle e_i, e_j \\rangle.$$\n","\n","Here we obtain 16d SVD node embeddings by `sklearn.decompose.TruncatedSVD` on the adjacency matrix."]},{"cell_type":"code","execution_count":null,"id":"0d106b76","metadata":{"id":"0d106b76","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747064607447,"user_tz":-180,"elapsed":1290,"user":{"displayName":"Александр Дорош","userId":"00867939589235916416"}},"outputId":"866b2c84-fa61-4524-82ec-3f2a84902d08"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0.77, -0.75, -0.45, ...,  0.28,  0.09, -0.24],\n","       [ 0.04, -0.01, -0.04, ...,  0.03,  0.12,  0.01],\n","       [ 1.83,  0.95,  0.24, ...,  0.5 , -0.15, -0.66],\n","       ...,\n","       [ 0.01, -0.  , -0.01, ..., -0.04,  0.03, -0.03],\n","       [ 0.14, -0.05, -0.12, ..., -0.11,  0.05, -0.12],\n","       [ 0.35, -0.3 , -0.37, ...,  0.48,  0.13,  0.11]])"]},"metadata":{},"execution_count":12}],"source":["G = nx.Graph()\n","G.add_nodes_from(range(np.max(train_pos) + 1))\n","G.add_edges_from(train_pos)\n","A = nx.to_numpy_array(G)\n","model = TruncatedSVD(n_components=16)\n","emb = model.fit_transform(A)\n","emb.round(2)"]},{"cell_type":"code","source":["np.dot(emb[0], emb[1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_L3cXHqJhsMI","executionInfo":{"status":"ok","timestamp":1747064607517,"user_tz":-180,"elapsed":40,"user":{"displayName":"Александр Дорош","userId":"00867939589235916416"}},"outputId":"73a23fde-f0d7-4860-af19-34ee5b40e8a5"},"id":"_L3cXHqJhsMI","execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.float64(-0.04723183943023186)"]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","id":"6e5ca153","metadata":{"id":"6e5ca153"},"source":["Write a function `dot_product_prediction` that takes node embeddings, test pairs, returns FPR and TPR for the test pairs."]},{"cell_type":"code","execution_count":null,"id":"9171ecfb","metadata":{"deletable":false,"id":"9171ecfb","nbgrader":{"cell_type":"code","checksum":"d2a9a90393f4821ede00fb251e579dfd","grade":false,"grade_id":"cell-e3728903f481eed8","locked":false,"schema_version":3,"solution":true,"task":false}},"outputs":[],"source":["def dot_product_prediction(emb, x_test, y_test):\n","    y_pred = [np.dot(emb[u], emb[v]) for u, v in x_test]\n","    fpr, tpr, _ = roc_curve(y_test, y_pred)\n","    return fpr, tpr"]},{"cell_type":"code","execution_count":null,"id":"8d6f1703","metadata":{"deletable":false,"editable":false,"id":"8d6f1703","nbgrader":{"cell_type":"code","checksum":"1475de791c3f09374b5bd06574a1b5b4","grade":true,"grade_id":"cell-d7b6b9f3c20abc71","locked":true,"points":3,"schema_version":3,"solution":false,"task":false}},"outputs":[],"source":["fpr, tpr = dot_product_prediction(np.random.random(emb.shape), x_test, y_test)\n","assert 0.45 < auc(fpr, tpr) < 0.55\n","fpr, tpr = dot_product_prediction(emb, x_test, y_test)\n","assert 0.75 < auc(fpr, tpr) < 0.85"]},{"cell_type":"code","execution_count":null,"id":"00914154","metadata":{"id":"00914154","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747064608489,"user_tz":-180,"elapsed":880,"user":{"displayName":"Александр Дорош","userId":"00867939589235916416"}},"outputId":"8d0d2031-ea72-41a5-c400-1eff032b8386"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAA04AAAIjCAYAAAA0vUuxAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAdEFJREFUeJzt3Xd4VGX6xvF7JpWEBAhJCCUUQYrSpEpRUJAqyq4uKCxFsQOLUgREqQoIylpAXRVFV1F0LcvPIBgCSAelCAhEaYKYUASSECBtzu+P2cxkICGFJGcm8/1cVy4z7zln8gwOIXfe9zyvxTAMQwAAAACAPFnNLgAAAAAA3B3BCQAAAADyQXACAAAAgHwQnAAAAAAgHwQnAAAAAMgHwQkAAAAA8kFwAgAAAIB8EJwAAAAAIB8EJwAAAADIB8EJAAAAAPJBcAIAlIpFixbJYrE4Pnx9fVW9enUNHTpUx48fz/UawzD073//W7feeqsqVqyooKAgNWnSRNOnT1dqamqeX+urr75Sz549FR4eLn9/f1WrVk39+vXTqlWrClzvuXPnFBgYKIvFon379uV6TufOndW4ceNcj50+fVoWi0VTp0694tjBgwf16KOP6rrrrlNgYKBCQ0PVoUMHvfrqq7p48WKBawQAlB5fswsAAHiX6dOnq06dOrp06ZI2b96sRYsWaf369dqzZ48CAwMd52VlZWnAgAH67LPPdMstt2jq1KkKCgrSunXrNG3aNH3++edauXKlqlSp4rjGMAw9+OCDWrRokW666SaNHj1aUVFRSkhI0FdffaUuXbpow4YNat++fb51fv7557JYLIqKitLHH3+s559/vlhef0xMjP72t78pICBAgwcPVuPGjZWenq7169dr3Lhx+vnnn/X2228Xy9cCABQfghMAoFT17NlTrVq1kiQ99NBDCg8P14svvqilS5eqX79+jvPmzJmjzz77TGPHjtXcuXMd44888oj69eunvn37aujQofr2228dx15++WUtWrRITz75pObNmyeLxeI4NmnSJP373/+Wr2/B/un76KOP1KtXL9WqVUuLFy8uluB0+PBh3XfffapVq5ZWrVqlqlWrOo4NHz5cBw4cUExMzDV/HQBA8WOpHgDAVLfccosk+/K1bBcvXtTcuXNVv359zZo164pr+vTpoyFDhmj58uXavHmz45pZs2apYcOGeumll1xCU7ZBgwapTZs2+dZ09OhRrVu3Tvfdd5/uu+8+HT58WBs3bizqS3SYM2eOzp8/r4ULF7qEpmz16tXTqFGjrvnrAACKH8EJAGCqI0eOSJIqVarkGFu/fr3Onj2rAQMG5DlDNHjwYEnSN99847jmzJkzGjBggHx8fK6ppk8++UTBwcG688471aZNG9WtW1cff/zxNT2nJP3f//2frrvuugItFQQAuBeCEwCgVCUlJen06dP6/fff9cUXX2jatGkKCAjQnXfe6Thn7969kqRmzZrl+TzZx7IbN2T/t0mTJtdc48cff6y7775b5cqVkyT1799fn332mTIzM4v8nMnJyTp+/Hix1AcAKH0EJwBAqeratasiIiIUHR2te++9V8HBwVq6dKlq1KjhOCclJUWSFBISkufzZB9LTk52+e/VrimIXbt2affu3br//vsdY/fff79Onz6tFStWFPl5i6s+AIA5CE4AgFK1YMECxcbG6j//+Y969eql06dPKyAgwOWc7HCRHaByc3m4Cg0Nzfeagvjoo48UHBys6667TgcOHNCBAwcUGBio2rVrF2m5Xva9VsVVHwDAHHTVAwCUqjZt2ji66vXt21cdO3bUgAEDFB8fr/Lly0uSGjVqJMk++9O3b99cn2fXrl2SpBtuuEGS1LBhQ0nS7t2787wmP4Zh6JNPPlFqaqrjeXM6efKkzp8/76gzMDAwz32XLly44DhHsgenatWqac+ePUWqDQBgLmacAACm8fHx0axZs/THH39o/vz5jvGOHTuqYsWKWrx4sbKysnK99sMPP5Qkx71RHTt2VKVKlfTJJ5/keU1+vv/+e/3++++aPn26Pv/8c5ePt99+WxcuXNDXX3/tOL9WrVo6duxYruEpPj7ecU62O++8UwcPHtSmTZuKVB8AwDwEJwCAqTp37qw2bdrolVde0aVLlyRJQUFBGjt2rOLj4zVp0qQrromJidGiRYvUvXt33XzzzY5rxo8fr3379mn8+PEyDOOK6z766CNt3bo1z1qyl+mNGzdO9957r8vHww8/rOuvv95luV6vXr2UkZGhf/3rXy7PY7PZ9Oabb8rf319dunRxjD/99NMKDg7WQw89pBMnTlzx9Q8ePKhXX301nz8xAIAZWKoHADDduHHj9Le//U2LFi3SY489JkmaMGGCduzYoRdffFGbNm3SPffco3Llymn9+vX66KOP1KhRI33wwQdXPM/PP/+sl19+WatXr9a9996rqKgoJSYm6uuvv9bWrVvz3I8pLS1NX3zxhe644w7H8rrL3XXXXXr11Vd18uRJRUZGqk+fPurWrZueeuopbd26Ve3bt9eFCxe0dOlSbdiwQc8//7wiIiIc19etW1eLFy9W//791ahRIw0ePFiNGzdWenq6Nm7cqM8//1xDhw4tnj9UAECxshi5/UoOAIBitmjRIj3wwAP64YcfHPc4ZbPZbKpfv74k+xK37H2YbDabPvzwQ7377rvavXu30tPTVbduXfXr109jxoxRcHBwrl/riy++0Ntvv60ff/xRycnJioiI0K233qrHH39cnTp1yvWaL7/8Uvfcc48WLlyoBx98MNdzvv/+e3Xu3Fmvvvqq/vGPf0iyB67Zs2fr008/1eHDh+Xr66smTZpoxIgRGjhwYK7P8+uvv2ru3LmKjY3VH3/8oYCAADVt2lT33XefHn744SuaZQAAzEdwAgAAAIB8cI8TAAAAAOSD4AQAAAAA+SA4AQAAAEA+CE4AAAAAkA+CEwAAAADkg+AEAAAAAPnwug1wbTab/vjjD4WEhMhisZhdDgAAAACTGIahlJQUVatWTVbr1eeUvC44/fHHH4qOjja7DAAAAABu4tixY6pRo8ZVz/G64BQSEiLJ/ocTGhpqcjUAAAAAzJKcnKzo6GhHRrgarwtO2cvzQkNDCU4AAAAACnQLD80hAAAAACAfBCcAAAAAyAfBCQAAAADy4XX3OBWEYRjKzMxUVlaW2aUAQJH4+fnJx8fH7DIAACgzCE6XSU9PV0JCgi5cuGB2KQBQZBaLRTVq1FD58uXNLgUAgDKB4JSDzWbT4cOH5ePjo2rVqsnf359NcgF4HMMwdOrUKf3++++6/vrrmXkCAKAYEJxySE9Pl81mU3R0tIKCgswuBwCKLCIiQkeOHFFGRgbBCQCAYkBziFxYrfyxAPBszJYDAFC8SAgAAAAAkA+CEwAAAADkg+AEj9G5c2c9+eSTZpdRph05ckQWi0U7d+40uxQAAAC3QnAqI4YOHSqLxSKLxSI/Pz9VqVJFd9xxh9577z3ZbLZCPdfUqVPVvHnzkim0DMjKytLs2bPVsGFDlStXTmFhYWrbtq3effddSVKfPn3Uo0ePXK9dt26dLBaLdu3a5Qgp2R8hISG68cYbNXz4cP3666+l+ZJK1aOPPiofHx99/vnnVxwbOnSo+vbte8X4mjVrZLFYdO7cOcdYenq65syZo2bNmikoKEjh4eHq0KGD3n//fWVkZBSptjNnzmjgwIEKDQ1VxYoVNWzYMJ0/f/6q1yQmJmrQoEGKiopScHCwWrRooS+++KLQz7tixQrdfPPNCgkJUUREhO655x4dOXLEcTwhIUEDBgxQ/fr1ZbVa+SUCAACljOBUhvTo0UMJCQk6cuSIvv32W912220aNWqU7rzzTmVmZppdniT7D7uebtq0afrnP/+pGTNmaO/evVq9erUeeeQRxw/1w4YNU2xsrH7//fcrrn3//ffVqlUrNW3a1DG2cuVKJSQk6KefftLMmTO1b98+NWvWTHFxcaX1kkrNhQsX9Omnn+rpp5/We++9V+TnSU9PV/fu3TV79mw98sgj2rhxo7Zu3arhw4fr9ddf188//1yk5x04cKB+/vlnxcbG6ptvvtHatWv1yCOPXPWawYMHKz4+XkuXLtXu3bv117/+Vf369dOOHTsK/LyHDx/W3Xffrdtvv107d+7UihUrdPr0af31r391nJOWlqaIiAg9++yzatasWZFeHwAAuAaGl0lKSjIkGUlJSVccu3jxorF3717j4sWLJlR2bYYMGWLcfffdV4zHxcUZkox33nnHMfbbb78Zd911lxEcHGyEhIQYf/vb34zExETDMAzj/fffNyS5fLz//vtX/ZpTp041wsPDjZCQEOPRRx810tLSHOd06tTJGD58uDFq1CijcuXKRufOnQ3DMIw1a9YYrVu3Nvz9/Y2oqChj/PjxRkZGhuO68+fPG4MGDTKCg4ONqKgo46WXXjI6depkjBo1qlB/Lrt27TJuu+02IzAw0AgLCzMefvhhIyUl5YrXMHfuXCMqKsoICwsznnjiCSM9PT3P52zWrJkxderUPI9nZGQYVapUMWbMmOEynpKSYpQvX9548803DcMwjMOHDxuSjB07dricl5WVZXTu3NmoVauWkZmZmefXOXr0qPG3v/3NqFChglGpUiXjrrvuMg4fPnzFa3vhhReMyMhIo0KFCsa0adOMjIwMY+zYsUalSpWM6tWrG++9957jmuyaPvnkE6Ndu3ZGQECAceONNxpr1qzJs47CWLRokXHzzTcb586dM4KCgoyjR4+6HM/rfbx69WpDknH27FnDMAzjxRdfNKxWq7F9+/Yrzk1PTzfOnz9f6Nr27t1rSDJ++OEHx9i3335rWCwW4/jx43leFxwcbHz44YcuY2FhYY6/cwV53s8//9zw9fU1srKyHOcsXbrUsFgsub4XC/J3wZO/nwEAUFqulg0uZ+o+TmvXrtXcuXO1bds2JSQk6Kuvvsp1mU5Oa9as0ejRo/Xzzz8rOjpazz77rIYOHVqidfZ5fb1OpaSV6NfITURIgP5vZMdreo7bb79dzZo105dffqmHHnpINptNd999t8qXL6/vv/9emZmZGj58uPr37681a9aof//+2rNnj5YvX66VK1dKkipUqJDn88fFxSkwMFBr1qzRkSNH9MADD6hy5cp64YUXHOd88MEHevzxx7VhwwZJ0vHjx9WrVy8NHTpUH374ofbv36+HH35YgYGBmjp1qiRp3Lhx+v777/Xf//5XkZGReuaZZ7R9+/ZCLSFMTU1V9+7d1a5dO/3www86efKkHnroIY0YMUKLFi1ynLd69WpVrVpVq1ev1oEDB9S/f381b95cDz/8cK7PGxUVpVWrVumJJ55QRETEFcd9fX01ePBgLVq0SJMmTXK0hf7888+VlZWl+++//6p1W61WjRo1Sn/5y1+0bds2tWnT5opzMjIyHK9t3bp18vX11fPPP68ePXpo165d8vf3lyStWrVKNWrU0Nq1a7VhwwYNGzZMGzdu1K233qotW7ZoyZIlevTRR3XHHXeoRo0ajucfN26cXnnlFd1www2aN2+e+vTpo8OHD6ty5cr5/rlfzcKFC/X3v/9dFSpUUM+ePbVo0SI999xzhX6ejz/+WF27dtVNN910xTE/Pz/5+flJkmbOnKmZM2de9bn27t2rmjVratOmTapYsaJatWrlONa1a1dZrVZt2bJFf/nLX3K9vn379lqyZIl69+6tihUr6rPPPtOlS5fUuXNnSSrQ87Zs2VJWq1Xvv/++hg4dqvPnz+vf//63unbt6ngtAADAXKYGp9TUVDVr1kwPPvigy5KUvBw+fFi9e/fWY489po8//lhxcXF66KGHVLVqVXXv3r3E6jyVkqbE5Esl9vwlrWHDhtq1a5cke9DZvXu3Dh8+rOjoaEnShx9+qBtvvFE//PCDWrdurfLly8vX11dRUVH5Pre/v7/ee+89BQUF6cYbb9T06dM1btw4zZgxw7Ef1vXXX685c+Y4rpk0aZKio6M1f/58WSwWNWzYUH/88YfGjx+vyZMn68KFC1q4cKE++ugjdenSRZI9fOX8wb4gFi9erEuXLunDDz9UcHCwJGn+/Pnq06ePXnzxRVWpUkWSVKlSJc2fP18+Pj5q2LChevfurbi4uDyD07x583TvvfcqKipKN954o9q3b6+7775bPXv2dJzz4IMPau7cufr+++8dP0C///77uueee64aRLM1bNhQkr1ZQ27BacmSJbLZbHr33Xcdwez9999XxYoVtWbNGnXr1k2SFBYWptdee01Wq1UNGjTQnDlzdOHCBT3zzDOSpIkTJ2r27Nlav3697rvvPsfzjxgxQvfcc48k6c0339Ty5cu1cOFCPf300/nWnpdff/1Vmzdv1pdffilJ+vvf/67Ro0fr2WefLfSeQ7/++qvjz/VqHnvsMfXr1++q51SrVk2S/V6lyMhIl2O+vr4KCwtTYmJintd/9tln6t+/vypXrixfX18FBQXpq6++Ur169Qr8vHXq1NF3332nfv366dFHH1VWVpbatWunZcuW5fsaAQBA6TA1OPXs2dPlh838vPXWW6pTp45efvllSVKjRo20fv16/fOf/yzR4BQRElBiz10aX9cwDMcPpvv27VN0dLQjNEnSDTfcoIoVK2rfvn1q3bp1oZ47+8b8bO3atdP58+d17Ngx1apVS5LUsmVLl2v27dundu3aufyw3KFDB50/f16///67zp49q/T0dLVt29ZxPCwsTA0aNChUbdn3CmWHpuyvY7PZFB8f7whON954o3x8fBznVK1aVbt3787zeW+44Qbt2bNH27Zt04YNG7R27Vr16dNHQ4cOdTSIaNiwodq3b6/33ntPnTt31oEDB7Ru3TpNnz69QLUbhiEp701Mf/rpJx04cEAhISEu45cuXdLBgwcdj2+88UaXDZ2rVKmixo0bOx77+PiocuXKOnnypMvztGvXzvG5r6+vWrVqpX379hWo9ry899576t69u8LDwyVJvXr10rBhw7Rq1SpHQC6o7D+f/ISFhSksLKzQtRbGc889p3PnzmnlypUKDw/X119/rX79+mndunVq0qRJgZ4jMTFRDz/8sIYMGaL7779fKSkpmjx5su69917FxsaymS0AoOy4eE6yZUrB4WZXUmimBqfC2rRpk7p27eoy1r1796t2l0pLS1NamnOZXXJycqG/7rUulzPbvn37VKdOHdO+fs7g4o4uXwplsVjy7URotVrVunVrtW7dWk8++aQ++ugjDRo0SJMmTXL8WQ8bNkwjR47UggUL9P7776tu3brq1KlTgWrKDil5/X87f/68WrZsqY8//viKYzmXD+b22oryeq9VVlaWPvjgAyUmJsrX19dl/L333nMEp9DQUP32229XXH/u3Dn5+Pg43kv169fX/v378/26hVmqFxUVdUWAzMzM1JkzZ/KcfT148KDmz5+vPXv26MYbb5Rk/2XCunXrtGDBAr311lsFet4FCxaoQoUKLjOzH330kaKjo7VlyxbdfPPN+b5WAACuRcyuBM2LjVdqWlaJPL/FsKm3bbWeyPq3frA20xTfp4rltpTS5FHBKTEx0TFLkK1KlSpKTk7WxYsXVa5cuSuumTVrlqZNm1ZaJbqdVatWaffu3Xrqqack2Wfpjh07pmPHjjlmnfbu3atz587phhtukGRffpeVVbC/ND/99JPLn/3mzZtVvnx5lxmtyzVq1EhffPGFy0zYhg0bFBISoho1aigsLEx+fn7asmWLatasKUk6e/asfvnllwIHj+yvs2jRIqWmpjp+4N6wYYNj2Vpxyv6zS01NdYz169dPo0aN0uLFi/Xhhx/q8ccfL9DMgc1m02uvvaY6derkeg+PJLVo0UJLlixRZGSkQkNDi+dF5LB582bdeuutkuw/5G/btk0jRowo8vMtW7ZMKSkp2rFjh8vs3p49e/TAAw/o3Llzqlixoho0aKBPP/1UaWlpCghwzrhu375dderUcYS+AQMG6JlnntGOHTuu+DPKyMhQenq6goODC7VUr127djp37py2bdvmmCVdtWqVbDaby+xnThcuXJAkl1k9yT6Tlx1GC/K8Fy5cyPU5JJV4qAUAQJLmxcbr4KnU/E8sgsaWQ5rut0gtrAckSd1t67QwpbOOKvefc9xVmW9HPnHiRCUlJTk+jh07ZnZJJSYtLU2JiYk6fvy4tm/frpkzZ+ruu+/WnXfeqcGDB0uy35TepEkTDRw4UNu3b9fWrVs1ePBgderUyXHzeu3atXX48GHt3LlTp0+fdpmxu1x6erqGDRumvXv3atmyZZoyZYpGjBhxxQ+BOT3xxBM6duyYRo4cqf379+u///2vpkyZotGjR8tqtap8+fIaNmyYxo0bp1WrVmnPnj0aOnToFc85ceJEx+vKzcCBAxUYGKghQ4Zoz549Wr16tUaOHKlBgwZdEcAL495779U///lPbdmyRb/99pvWrFmj4cOHq379+o57kySpfPny6t+/vyZOnKiEhIQ8m5j8+eefSkxM1KFDh7R06VJ17dpVW7du1cKFC11CxuWvLTw8XHfffbfWrVunw4cPa82aNfrHP/6Raxv0wlqwYIG++uor7d+/X8OHD9fZs2f14IMPOo43bNhQX331VYGfb+HCherdu7eaNWumxo0bOz769eunihUrOmbOBg4cKIvFosGDB2vbtm06cOCA3nvvPb3yyisaM2aM4/mefPJJdejQQV26dNGCBQv0008/6dChQ/rss8908803O/bBCgsLU7169a76kT0D1qhRI/Xo0UMPP/ywtm7dqg0bNmjEiBG67777HOHq+PHjatiwobZu3er4c6hXr54effRRbd26VQcPHtTLL7+s2NhYR6Obgjxv79699cMPP2j69On69ddftX37dj3wwAOqVauWSzDcuXOndu7cqfPnz+vUqVPauXOn9u7dW9j/vQAAOMTsSlCXl9fo8Gl7aLJapKjQwGL5qB+SoXlBi7Q04DlHaJKkldb2ulQ+2rTbYYrKo2acoqKidOLECZexEydOKDQ0NNfZJkkKCAhw+c11WbZ8+XJVrVpVvr6+qlSpkpo1a6bXXntNQ4YMcYQOi8Wi//73vxo5cqRuvfVWWa1W9ejRQ6+//rrjee655x59+eWXuu2223Tu3DlHp6/cdOnSRddff71uvfVWpaWl6f7773d0xstL9erVtWzZMo0bN07NmjVTWFiYhg0bpmeffdZxzty5c3X+/Hn16dNHISEhGjNmjJKSklyeJyEhQUePHs3z6wQFBWnFihUaNWqUWrduraCgIN1zzz2aN29ePn+SV9e9e3d98sknmjVrlpKSkhQVFaXbb79dU6dOdVmGJtmX6y1cuFC9evVy/JB8uezlp0FBQapVq5Zuu+02vf32247mAnm9trVr12r8+PH661//qpSUFFWvXl1dunQplhmo2bNna/bs2dq5c6fq1aunpUuXOu5NkqT4+HiX/x9Tp07VokWLXDZszXbixAnFxMRo8eLFVxyzWq36y1/+ooULF2r48OGqWLGi1q1bpwkTJuiuu+5SUlKS6tWrp3nz5mnYsGGO6wICAhQbG6t//vOf+te//qWxY8cqKChIjRo10j/+8Q+X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\n"},"metadata":{}}],"source":["plt.figure(figsize=(10, 6))\n","plt.plot(fpr, tpr, lw=2,\n","         label='{}, AUC={:.4f}'.format('Dot prod. on SVD emb.', auc(fpr, tpr)))\n","plt.plot([0, 1], [0, 1], lw=2, linestyle='--')\n","plt.xlabel('FPR')\n","plt.ylabel('TPR')\n","plt.title('ROC AUC')\n","plt.legend()\n","plt.show()"]},{"cell_type":"markdown","id":"15c67453","metadata":{"id":"15c67453"},"source":["### Task 5. Evaluation metrics for recommender systems (3 points)"]},{"cell_type":"markdown","id":"09319913","metadata":{"id":"09319913"},"source":["Recommender systems are algorithms aimed at suggesting relevant items to users (suggest to users the right contents, matching their preferences), that is ordered by relevance items for a specific user. Link prediction algorithm can be considered as a recommender system on a network, for example, to recommend friends in a social service, or recommend similar films in a film page.\n","\n","Metrics for recommender system are based on *ranking* of suggested items. Let us consider the HR@K (hit ratio at k) metric. HR@k measures the proportion of users who have at least one click on the top-k recommended items:\n","$$\n","\\text{HR@k} =\\frac{1}{|V|} \\Sigma_{u \\in V} I\\left(\\left|R^{k}(u) \\cap T(u)\\right|>0\\right)\n","$$\n","where $V$ — nodes, $R^k(u)$ — top-k nodes adjacent to node $u$ ordered by link prediction score (probability of existance), $T(u)$ — nodes adjacent to node $u$ in positive test edges, $I(\\cdot)$ is an indicator function.\n","\n","Let us evaluate dot product predictor on SVD node embeddings using HR@k metric. Here we use a whole similarity matrix of dot product predictor."]},{"cell_type":"code","execution_count":null,"id":"99149fb0","metadata":{"id":"99149fb0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747064609463,"user_tz":-180,"elapsed":968,"user":{"displayName":"Александр Дорош","userId":"00867939589235916416"}},"outputId":"8329a445-87e5-47bb-d113-66f537b311f6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1005, 1005)"]},"metadata":{},"execution_count":17}],"source":["G = nx.Graph()\n","G.add_nodes_from(range(np.max(train_pos) + 1))\n","G.add_edges_from(train_pos)\n","A = nx.to_numpy_array(G)\n","model = TruncatedSVD(n_components=16, random_state=0)\n","emb = model.fit_transform(A)\n","sim_matrix = emb @ emb.T\n","sim_matrix.shape"]},{"cell_type":"markdown","id":"89acfe5f","metadata":{"id":"89acfe5f"},"source":["Write a function `hr_at_k_score` that takes test positive edges, similarity matrix and returns np.array of HR@k scores for all nodes in test positive edges *before averaging*."]},{"cell_type":"code","execution_count":null,"id":"53dc841f","metadata":{"deletable":false,"id":"53dc841f","nbgrader":{"cell_type":"code","checksum":"90521f24bd2624fe134ef71b62c83683","grade":false,"grade_id":"cell-3142a22f9acde4db","locked":false,"schema_version":3,"solution":true,"task":false}},"outputs":[],"source":["def hr_at_k_score(test_pos, sim_matrix, k):\n","    node_to_pos_edges = defaultdict(set)\n","    for node1, node2 in test_pos:\n","        node_to_pos_edges[node1].add(node2)\n","        node_to_pos_edges[node2].add(node1)\n","\n","    hr_scores = []\n","    for node1, pos_edges in node_to_pos_edges.items():\n","        scores = sim_matrix[node1]\n","        top_k_nodes = np.argsort(-scores)[:k]\n","        hr = sum(1 for node2 in pos_edges if node2 in top_k_nodes) / len(pos_edges)\n","        hr_scores.append(hr)\n","\n","    return np.array(hr_scores)"]},{"cell_type":"code","execution_count":null,"id":"5cad7017","metadata":{"deletable":false,"editable":false,"id":"5cad7017","nbgrader":{"cell_type":"code","checksum":"d15e32f8bf31b9e7c29ecdffcc8b296d","grade":true,"grade_id":"cell-733c61db65b570f1","locked":true,"points":3,"schema_version":3,"solution":false,"task":false}},"outputs":[],"source":["rmatrix = np.random.random(sim_matrix.shape)\n","random_1 = hr_at_k_score(test_pos, rmatrix, k=1)\n","assert random_1.shape[0] == len(np.unique(test_pos))\n","assert 0 <= random_1.mean() <= 1\n","dotprod_1 = hr_at_k_score(test_pos, sim_matrix, k=1)\n","dotprod_5 = hr_at_k_score(test_pos, sim_matrix, k=5)\n","assert random_1.mean() < dotprod_1.mean()\n","assert dotprod_1.mean() < dotprod_5.mean()"]},{"cell_type":"markdown","id":"6f02f499","metadata":{"id":"6f02f499"},"source":["Let us compare dot product predictor with random guess by HR@K metric."]},{"cell_type":"code","execution_count":null,"id":"47f5ea54","metadata":{"id":"47f5ea54","colab":{"base_uri":"https://localhost:8080/","height":472},"executionInfo":{"status":"ok","timestamp":1747064610430,"user_tz":-180,"elapsed":817,"user":{"displayName":"Александр Дорош","userId":"00867939589235916416"}},"outputId":"ff17c962-721e-4875-e149-28f79b5e778c"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["random_hrk = []\n","dotpor_hrk = []\n","for k in [1, 5, 10, 20]:\n","    random_hrk.append(hr_at_k_score(test_pos, rmatrix, k).mean())\n","    dotpor_hrk.append(hr_at_k_score(test_pos, sim_matrix, k).mean())\n","plt.bar(['1', '5', '10', '20'], random_hrk, width=-0.4, align='edge', label='Random guess')\n","plt.bar(['1', '5', '10', '20'], dotpor_hrk, width=0.4, align='edge', label='Dot prod. on SDV emb.')\n","plt.legend()\n","plt.xlabel('k')\n","plt.title('HR@k score')\n","plt.show()"]},{"cell_type":"markdown","id":"17b7fba9","metadata":{"id":"17b7fba9"},"source":["### Task 6. Classification on edge emdeddings (4 points)"]},{"cell_type":"markdown","id":"e7b67157","metadata":{"id":"e7b67157"},"source":["Edge emeddings can be used for edge classification by any supervised algorithm (e.g. logistic regression). We can compute edge embeddings using embeddings of adjacent nodes. Let us compare several techniques of a such calculation from the paper: *Makarov I, Gerasimova O, Sulimov P, Zhukov LE. 2019. Dual network embedding for representing research interests in the link prediction problem on co-authorship networks*. Let us use SVD node embeddings for calculating edge embeddings."]},{"cell_type":"code","execution_count":null,"id":"ba750d1f","metadata":{"id":"ba750d1f","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747064610630,"user_tz":-180,"elapsed":204,"user":{"displayName":"Александр Дорош","userId":"00867939589235916416"}},"outputId":"7690335a-9354-4260-aea3-e68bc7916051"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0.77, -0.75, -0.46,  1.53],\n","       [ 0.04, -0.01, -0.04, -0.03],\n","       [ 1.83,  0.95,  0.24,  0.33],\n","       ...,\n","       [ 0.01, -0.  , -0.01, -0.01],\n","       [ 0.14, -0.05, -0.12, -0.06],\n","       [ 0.35, -0.3 , -0.37,  0.85]])"]},"metadata":{},"execution_count":21}],"source":["G = nx.Graph()\n","G.add_nodes_from(range(np.max(train_pos) + 1))\n","G.add_edges_from(train_pos)\n","A = nx.to_numpy_array(G)\n","model = TruncatedSVD(n_components=4, random_state=0)\n","emb = model.fit_transform(A)\n","emb.round(2)"]},{"cell_type":"markdown","id":"4ca30dc6","metadata":{"id":"4ca30dc6"},"source":["All following functions return edge embeddings for given graph, node embeddings, edges. Average operator is the elementwise average of node embeddings.\n","$$\n","\\frac{f(u)+f(v)}{2}\n","$$\n","where $f(u)$, $f(v)$ are node embeddings of nodes $u$ and $v$."]},{"cell_type":"code","execution_count":null,"id":"1a3674cb","metadata":{"deletable":false,"id":"1a3674cb","nbgrader":{"cell_type":"code","checksum":"58f462d94128ad39168d5c1651115bbc","grade":false,"grade_id":"cell-26173c0c479136b7","locked":false,"schema_version":3,"solution":true,"task":false}},"outputs":[],"source":["def average_operator(G, embeddings, edges):\n","     edge_embeddings = []\n","     for u, v in edges:\n","         avg_embedding = (embeddings[u] + embeddings[v]) / 2\n","         edge_embeddings.append(avg_embedding)\n","     return np.array(edge_embeddings)"]},{"cell_type":"code","execution_count":null,"id":"a7fda998","metadata":{"deletable":false,"editable":false,"id":"a7fda998","nbgrader":{"cell_type":"code","checksum":"1e3bbaf8aa7f5e7d6f462cc0f92775ee","grade":true,"grade_id":"cell-eaefe9963be3c2d0","locked":true,"points":0.57,"schema_version":3,"solution":false,"task":false}},"outputs":[],"source":["assert np.allclose(\n","    average_operator(G, emb, np.array([[42,70]])).round(1),\n","    [[ 0.6, -0.2, -0.3, -0.2]]\n",")"]},{"cell_type":"markdown","id":"4197cb89","metadata":{"id":"4197cb89"},"source":["Hadamard product is the elementwise product of node embeddings $$f(u) \\odot f(v)$$"]},{"cell_type":"code","execution_count":null,"id":"134b41f7","metadata":{"deletable":false,"id":"134b41f7","nbgrader":{"cell_type":"code","checksum":"dca0930cdead56210ac1d3ed38a1da2d","grade":false,"grade_id":"cell-f662abe3d0579575","locked":false,"schema_version":3,"solution":true,"task":false}},"outputs":[],"source":["def hadamard_operator(G, embeddings, edges):\n","    edge_embeddings = []\n","    for u, v in edges:\n","        avg_embedding = np.multiply(embeddings[u], embeddings[v])\n","        edge_embeddings.append(avg_embedding)\n","    return np.array(edge_embeddings)"]},{"cell_type":"code","execution_count":null,"id":"54147f5f","metadata":{"deletable":false,"editable":false,"id":"54147f5f","nbgrader":{"cell_type":"code","checksum":"26c06cc181807ba861df3b2dde3ea277","grade":true,"grade_id":"cell-db04660af550adc7","locked":true,"points":0.57,"schema_version":3,"solution":false,"task":false}},"outputs":[],"source":["assert np.allclose(\n","    hadamard_operator(G, emb, np.array([[42,70]])).round(2),\n","    [[0.21, 0.02, 0.09, 0.02]]\n",")"]},{"cell_type":"markdown","id":"7deb491d","metadata":{"id":"7deb491d"},"source":["Weighted L1 is the absolute elementwise difference between node embeddings $$\n","\\left|f(u)-f(v)\\right|\n","$$"]},{"cell_type":"code","execution_count":null,"id":"82938ad8","metadata":{"deletable":false,"id":"82938ad8","nbgrader":{"cell_type":"code","checksum":"d6257c4c2eb4680600acc5867ddba862","grade":false,"grade_id":"cell-5e44fbdf6a64715d","locked":false,"schema_version":3,"solution":true,"task":false}},"outputs":[],"source":["def weighted_l1_operator(G, embeddings, edges):\n","    edge_embeddings = []\n","    for u, v in edges:\n","        avg_embedding = abs(embeddings[u] - embeddings[v])\n","        edge_embeddings.append(avg_embedding)\n","    return np.array(edge_embeddings)"]},{"cell_type":"code","execution_count":null,"id":"a0e711e4","metadata":{"deletable":false,"editable":false,"id":"a0e711e4","nbgrader":{"cell_type":"code","checksum":"cff254b8a9077abb2b6b60085851510d","grade":true,"grade_id":"cell-f2c7878af729fcb5","locked":true,"points":0.57,"schema_version":3,"solution":false,"task":false}},"outputs":[],"source":["assert np.allclose(\n","    weighted_l1_operator(G, emb, np.array([[42,70]])).round(2),\n","    [[0.88, 0.12, 0.28, 0.17]]\n",")"]},{"cell_type":"markdown","id":"08ce6529","metadata":{"id":"08ce6529"},"source":["Weighted L2 is the squared elementwise difference between node embeddings $$\n","\\left(f(u)-f(v)\\right)^{2}\n","$$"]},{"cell_type":"code","execution_count":null,"id":"47774f3a","metadata":{"deletable":false,"id":"47774f3a","nbgrader":{"cell_type":"code","checksum":"c81ca1cb9941e2216cb755dcb6b1d6df","grade":false,"grade_id":"cell-0f7f5b3663337374","locked":false,"schema_version":3,"solution":true,"task":false}},"outputs":[],"source":["def weighted_l2_operator(G, embeddings, edges):\n","    edge_embeddings = []\n","    for u, v in edges:\n","        avg_embedding = abs(embeddings[u] - embeddings[v])**2\n","        edge_embeddings.append(avg_embedding)\n","    return np.array(edge_embeddings)"]},{"cell_type":"code","execution_count":null,"id":"3f565493","metadata":{"deletable":false,"editable":false,"id":"3f565493","nbgrader":{"cell_type":"code","checksum":"6ec75dc437072c6eb43baf668f1164e2","grade":true,"grade_id":"cell-957e1faea3e9127d","locked":true,"points":0.57,"schema_version":3,"solution":false,"task":false}},"outputs":[],"source":["assert np.allclose(\n","    weighted_l2_operator(G, emb, np.array([[42,70]])).round(2),\n","    [[0.77, 0.01, 0.08, 0.03]]\n",")"]},{"cell_type":"markdown","id":"f87677d8","metadata":{"id":"f87677d8"},"source":["Neighbor weighted L1 is the absolute elementwise difference between mean embeddings of nodes neigbors $$\n","\\left|\\frac{\\sum_{w \\in N(u) \\cup\\{u\\}} f(w)}{|N(u)|+1}-\\frac{\\sum_{t \\in N(v) \\cup\\{v\\}} f(t)}{|N(v)|+1}\\right|\n","$$"]},{"cell_type":"code","execution_count":null,"id":"537c4eb9","metadata":{"deletable":false,"id":"537c4eb9","nbgrader":{"cell_type":"code","checksum":"91862e3967ecf48894e45a0adf8af354","grade":false,"grade_id":"cell-9663ec4df9dbb751","locked":false,"schema_version":3,"solution":true,"task":false}},"outputs":[],"source":["def neighbor_weighted_l1_operator(G, embeddings, edges):\n","    edge_embeddings = []\n","\n","    for u, v in edges:\n","        neighbors_u = list(G.neighbors(u)) + [u]\n","        neighbors_v = list(G.neighbors(v)) + [v]\n","\n","        mean_u = np.mean([embeddings[n] for n in neighbors_u], axis=0)\n","        mean_v = np.mean([embeddings[n] for n in neighbors_v], axis=0)\n","\n","        l1_distance = np.abs(mean_u - mean_v)\n","        edge_embeddings.append(l1_distance)\n","    return np.array(edge_embeddings)"]},{"cell_type":"code","execution_count":null,"id":"ab13e835","metadata":{"deletable":false,"editable":false,"id":"ab13e835","nbgrader":{"cell_type":"code","checksum":"970c516b627d54fff1ca8458bd8d61ce","grade":true,"grade_id":"cell-fe7f124fa265373c","locked":true,"points":0.57,"schema_version":3,"solution":false,"task":false}},"outputs":[],"source":["assert np.allclose(\n","    neighbor_weighted_l1_operator(G, emb, np.array([[42,70]])).round(2),\n","    [[1.89, 0.14, 0.3 , 0.18]]\n",")"]},{"cell_type":"markdown","id":"ed72981d","metadata":{"id":"ed72981d"},"source":["Neighbor weighted L2 is the squared elementwise difference between mean embeddings of nodes neigbors\n","$$\n","\\left(\\frac{\\sum_{w \\in N(u) \\cup\\{u\\}} f(w)}{|N(u)|+1}-\\frac{\\sum_{t \\in N(v) \\cup\\{v\\}} f(t)}{|N(v)|+1}\\right)^{2}\n","$$"]},{"cell_type":"code","execution_count":null,"id":"f037a421","metadata":{"deletable":false,"id":"f037a421","nbgrader":{"cell_type":"code","checksum":"6fe87475999a79b39066260f060f80ca","grade":false,"grade_id":"cell-cb55782d381636cd","locked":false,"schema_version":3,"solution":true,"task":false}},"outputs":[],"source":["def neighbor_weighted_l2_operator(G, embeddings, edges):\n","    edge_embeddings = []\n","\n","    for u, v in edges:\n","        neighbors_u = list(G.neighbors(u)) + [u]\n","        neighbors_v = list(G.neighbors(v)) + [v]\n","\n","        mean_u = np.mean([embeddings[n] for n in neighbors_u], axis=0)\n","        mean_v = np.mean([embeddings[n] for n in neighbors_v], axis=0)\n","\n","        l1_distance = np.abs(mean_u - mean_v)**2\n","        edge_embeddings.append(l1_distance)\n","    return np.array(edge_embeddings)"]},{"cell_type":"code","execution_count":null,"id":"ffb1199b","metadata":{"deletable":false,"editable":false,"id":"ffb1199b","nbgrader":{"cell_type":"code","checksum":"8f676c5be3081e084f9b96c8d550c266","grade":true,"grade_id":"cell-b3ea740a7d8e7422","locked":true,"points":0.57,"schema_version":3,"solution":false,"task":false}},"outputs":[],"source":["assert np.allclose(\n","    neighbor_weighted_l2_operator(G, emb, np.array([[42,70]])).round(2),\n","    [[3.58, 0.02, 0.09, 0.03]]\n",")"]},{"cell_type":"markdown","id":"e8dbbfdd","metadata":{"id":"e8dbbfdd"},"source":["Now let us look at the ROC AUC for different operators on 16d SVD nome embeddings."]},{"cell_type":"code","execution_count":null,"id":"b69221cf","metadata":{"deletable":false,"editable":false,"id":"b69221cf","nbgrader":{"cell_type":"code","checksum":"cc517d17620e9ac0bafb7c9d654f69f0","grade":true,"grade_id":"cell-a5776c997347476f","locked":true,"points":0.5800000000000005,"schema_version":3,"solution":false,"task":false}},"outputs":[],"source":["model = TruncatedSVD(n_components=16, random_state=0)\n","emb = model.fit_transform(A)\n","\n","operators = {\n","    \"Average\": average_operator,\n","    \"Hadamard product\": hadamard_operator,\n","    \"Weighted L1\": weighted_l1_operator,\n","    \"Weighted L2\": weighted_l2_operator,\n","    \"Neighbor weighted L1\": neighbor_weighted_l1_operator,\n","    \"Neighbor weighted L2\": neighbor_weighted_l2_operator\n","}\n","\n","res = dict()\n","for name, operator in operators.items():\n","    lr = LogisticRegression()\n","    train_emb = operator(G, emb, x_train)\n","    lr.fit(train_emb, y_train)\n","    test_emb = operator(G, emb, x_test)\n","    y_pred = lr.predict_proba(test_emb)[:, 1]\n","    fpr, tpr, _ = roc_curve(y_test, y_pred)\n","    res[name] = {\n","        'fpr': fpr,\n","        'tpr': tpr\n","    }\n","\n","assert auc(fpr, tpr) > 0.75"]},{"cell_type":"code","execution_count":null,"id":"b9ec5b34","metadata":{"id":"b9ec5b34","colab":{"base_uri":"https://localhost:8080/","height":564},"executionInfo":{"status":"ok","timestamp":1747064615718,"user_tz":-180,"elapsed":365,"user":{"displayName":"Александр Дорош","userId":"00867939589235916416"}},"outputId":"decca51c-56da-4598-cc5f-9d1dddb73fc1"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["plt.figure(figsize=(10, 6))\n","for label, v in res.items():\n","    fpr, tpr = v['fpr'], v['tpr']\n","    plt.plot(fpr, tpr, lw=2,\n","             label='{}, AUC={:.4f}'.format(label, auc(fpr, tpr)))\n","plt.plot([0, 1], [0, 1], lw=2, linestyle='--')\n","plt.xlabel('FPR')\n","plt.ylabel('TPR')\n","plt.title('ROC AUC')\n","plt.legend()\n","plt.show()"]},{"cell_type":"code","execution_count":null,"id":"2d396ada","metadata":{"id":"2d396ada"},"outputs":[],"source":[]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.4"},"colab":{"provenance":[{"file_id":"1TjhjkmJ8uX3Mucs-1ORplBdGb0Ayj3ma","timestamp":1746538894971}],"collapsed_sections":["d9ee366c"],"toc_visible":true}},"nbformat":4,"nbformat_minor":5}